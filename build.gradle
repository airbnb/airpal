buildscript {
    repositories {
        mavenCentral()
    }

}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '0.9.9'
    id 'com.moowork.node' version '0.8'
    id 'com.github.johnrengelman.shadow' version '1.2.0'
    id 'nebula.os-package' version '2.2.6'
}

ext {
    prestoVersion = "0.77"
    if (System.properties['airpal.prestoVersion'] != null) {
        prestoVersion = System.properties['airpal.prestoVersion']
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.moowork.node'
apply plugin: 'os-package-base'
apply plugin: 'maven'


group = 'com.airbnb.airpal'

description = """airpal"""

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
    mavenCentral()
    maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
}

project.version = scmVersion.version

configurations {
    provided
}

idea.module.scopes.COMPILE.plus += [configurations.provided]

sourceSets {
    main {
        compileClasspath += [configurations.provided]
    }
}

dependencies {
    compile group: 'org.eclipse.jetty', name: 'jetty-util', version:'9.0.7.v20131107'
    compile group: 'org.eclipse.jetty', name: 'jetty-client', version:'9.0.7.v20131107'
    compile group: 'com.google.guava', name: 'guava', version:'18.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.0.13'
    compile group: 'io.dropwizard', name: 'dropwizard-core', version:'0.7.1'
    compile group: 'io.dropwizard', name: 'dropwizard-jdbi', version:'0.7.1'
    compile group: 'io.dropwizard', name: 'dropwizard-assets', version:'0.7.1'
    compile group: 'io.dropwizard', name: 'dropwizard-views-freemarker', version:'0.7.1'
    compile group: 'io.dropwizard', name: 'dropwizard-metrics-graphite', version:'0.7.1'
    compile group: 'io.dropwizard.modules', name: 'dropwizard-flyway', version:'0.7.0-1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.3.2'
    compile(group: 'com.facebook.presto', name: 'presto-client', version:prestoVersion) {
        exclude(group: 'org.eclipse.jetty')
    }
    compile group: 'com.facebook.presto', name: 'presto-spi', version:prestoVersion
    compile(group: 'com.facebook.presto', name: 'presto-main', version:prestoVersion) {
        exclude(module: 'javax.servlet-api')
        exclude(group: 'org.eclipse.jetty')
    }
    compile group: 'com.facebook.presto', name: 'presto-parser', version:prestoVersion
    compile group: 'com.hubspot.rosetta', name: 'RosettaJdbi', version:'2.1-SNAPSHOT'
    compile group: 'net.sf.opencsv', name: 'opencsv', version:'2.3'
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version:'1.6.8'
    compile group: 'org.apache.shiro', name: 'shiro-web', version:'1.2.3'
    compile group: 'org.apache.shiro', name: 'shiro-guice', version:'1.2.3'
    compile group: 'org.secnod.dropwizard', name: 'dropwizard-shiro', version:'0.1.0'
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.34'

    provided group: 'org.projectlombok', name: 'lombok', version:'1.12.2'

    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.10.8'
}

node {
    version    = '0.10.33'
    npmVersion = '2.1.6'

    download   = System.properties['airpal.useLocalNode'] == null
}


task cleanAssets {
  delete file("src/main/resources/assets/build")
}

task installAssets(type: NpmTask) {
    args = ['install']

    execOverrides {
        it.workingDir = file('src/main/resources/assets/').absolutePath
    }
}

task buildAssets(type: NodeTask) {
    script = file('src/main/resources/assets/node_modules/gulp/bin/gulp.js')
    args = ['browserify']

    execOverrides {
        it.workingDir = file('src/main/resources/assets/').absolutePath
    }
}

shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer)
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/LICENSE'

    zip64 true
}

ospackage {
    packageName = 'airpal'
    release = 1
    version = "0.1"
    os = LINUX
    into '/usr/local/airpal'

    from (shadowJar.outputs.files) {
        into 'lib'
    }
}

task writePom << {
    pom {
        project {
            scm {
                connection 'scm:git:git@github.com:louiswilliams/airpal.git'
                tag 'airpal-0.1.0'
            }
            parent {
                groupId 'com.bazaarvoice.commons'
                artifactId 'bv-super-pom'
                version '1.12'
                relativePath 'true'
            }
            dependencies {
                dependency {
                    groupId 'org.projectlombok'
                    artifactId 'lombok'
                    version '1.16.4'
                    scope 'provided'
                }
            }
        }
    }.withXml {
        asNode().with {
            appendNode('build').appendNode('plugins').with {
                appendNode('plugin').with {
                    appendNode('groupId', 'com.bazaarvoice.maven.plugins')
                    appendNode('artifactId', 's3repo-maven-plugin')
                    appendNode('version', '3.5')
                    appendNode('executions').appendNode('execution').with {
                        appendNode('phase', 'deploy')
                        appendNode('goals').appendNode('goal', 'create-update')
                    }
                    appendNode('configuration').with {
                        appendNode('allowCreateRepository', 'true')
                        appendNode('s3RepositoryPath', 's3://nexus-private-artifacts/airpal/yum-repo')
                        appendNode('createrepoOpts', '--simple-md-filenames --no-database')
                        appendNode('artifactItems').appendNode('artifactItem').with {
                            appendNode('groupId', 'com.airbnb.airpal')
                            appendNode('artifactId', 'airpal')
                            appendNode('version', '0.1.0-SNAPSHOT')
                            appendNode('type', 'rpm')
                            appendNode('classifier', 'rpm')
                            appendNode('targetExtension', 'noarch.rpm')
                        }
                    }
                }
                appendNode('plugin').with {
                    appendNode('groupId', 'org.codehaus.mojo')
                    appendNode('artifactId', 'rpm-maven-plugin')
                    appendNode('version', '2.1.3')
                    appendNode('configuration').with {
                        appendNode('group','com.airbnb.airpal')
                        appendNode('name', 'airpal')
                        appendNode('mappings').with {
                            appendNode('mapping').with {
                                appendNode('directory','/usr/local/airpal')
                                appendNode('artifact')
                            }
                        }
                    }
                    appendNode('executions').appendNode('execution').with {
                        appendNode('phase', 'package')
                        appendNode('goals').appendNode('goal', 'rpm')
                    }
                }
            }
            appendNode('properties').with {
                appendNode('java.minimum.version', '1.7')
            }
        }
    }.writeTo("pom.xml")
}

buildAssets.dependsOn installAssets
compileJava.dependsOn buildAssets
clean.dependsOn cleanAssets
